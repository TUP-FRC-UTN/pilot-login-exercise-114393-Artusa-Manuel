// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pilotos.Context;

#nullable disable

namespace Pilotos.Migrations
{
    [DbContext(typeof(PilotosContext))]
    [Migration("20240703172311_InitialPiloto")]
    partial class InitialPiloto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pilotos.Models.Nacionalidad", b =>
                {
                    b.Property<int>("NacionalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NacionalidadId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NacionalidadId");

                    b.ToTable("nacionalidades");

                    b.HasData(
                        new
                        {
                            NacionalidadId = 1,
                            Descripcion = "Argentino"
                        },
                        new
                        {
                            NacionalidadId = 2,
                            Descripcion = "Uruguayo"
                        },
                        new
                        {
                            NacionalidadId = 3,
                            Descripcion = "Chileno"
                        });
                });

            modelBuilder.Entity("Pilotos.Models.Piloto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantHorasVuelo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NacionalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NacionalidadId");

                    b.ToTable("pilotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantHorasVuelo = 123,
                            Email = "MANU@UNAM",
                            NacionalidadId = 1,
                            Name = "Manu",
                            Password = "qweqweqwe"
                        },
                        new
                        {
                            Id = 2,
                            CantHorasVuelo = 111,
                            Email = "ggg@ggg",
                            NacionalidadId = 3,
                            Name = "Guille",
                            Password = "123123"
                        });
                });

            modelBuilder.Entity("Pilotos.Models.Piloto", b =>
                {
                    b.HasOne("Pilotos.Models.Nacionalidad", "Nacionalidad")
                        .WithMany()
                        .HasForeignKey("NacionalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nacionalidad");
                });
#pragma warning restore 612, 618
        }
    }
}
